plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ssafy.moa2zi'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	implementation "com.amazonaws:aws-java-sdk-s3:1.12.281"

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//json
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//image
	implementation 'com.sksamuel.scrimage:scrimage-webp:4.3.0'

	// querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//SMS
	implementation 'com.squareup.okhttp3:okhttp:4.9.3'
	implementation 'com.google.code.gson:gson:2.9.0'

	// Geometry 사용
	implementation 'org.hibernate.orm:hibernate-spatial:6.4.4.Final'

	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// Retry
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'

	// webflux
	implementation 'org.springframework:spring-webflux'

	//firebase
	implementation 'com.google.firebase:firebase-admin:9.4.3'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


}

tasks.named('test') {
	useJUnitPlatform()
}
